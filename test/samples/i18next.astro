---
// 单个单词：外部扩展为不被选中
const info = "hello";
const data = "useful-info";
const enumWord = "TEST_KEY";

// 多个单词：必定选中
const replaced = "hello world";

// 模板字符串通通被选中
const templateTest = `prefix${info + "23232"}after`;

const obj = {
    // value 均遵循单词方式，key 永不选中
    name: "my-component-name",
};
// 作为 key 永不选中
const item = obj["name info"];
const item2 = obj[`name_${info}`];
---

<!doctype html>
<p class="err-title" title={"文章列表"}>404 RightThisWay</p>
<p class="err-msg">Soury,&nbsp;&nbsp;&nbsp; Invisible~</p>
<p class="err-msg">{"info"}</p>
<p class="err-msg">prefix{"info"}suffix</p>
<img class="err-msg" alt="important message" src="./index.jpg" />
<img class="err-msg" alt={"important message"} src="./index.jpg" />

<!-- 支持 astro 注释 -->
<!-- <TechSupport /> -->

<!-- TimeLine 一个开发时间线 -->

<!-- 代码解析 -->
<style>
    .html {
        height: 100%;
    }
</style>

<script type="module">
    // 多个单词：必定选中
    const inline_script_replaced = "hello world";

    // 模板字符串通通被选中
    const templateTest = `prefix${info + "23232"}after`;

    // 不能匹配到URL模板
    link.href = __CDN__ + `/packages/${font}/dist/${fileName}/result.css`;
</script>
